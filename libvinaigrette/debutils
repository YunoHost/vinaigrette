#!/usr/bin/env bash

debian_changelog_set_daily_version() {
    local pkgdir=$1

    local version timetag
    version=$(cd "$pkgdir" || return 1; dpkg-parsechangelog -S Version 2>/dev/null)
    timetag="$(date +%Y%m%d%H%M)"

    local version_daily="${version}+${timetag}"

    echo "> Setting version in changelog to $version"

    rm -f "$pkgdir/debian/changelog.dch"
    cp "$pkgdir/debian/changelog" "$pkgdir/debian/changelog.old"

    pushd "$pkgdir" >/dev/null || exit 1
        DEBEMAIL=contrib@yunohost.org \
        dch --force-bad-version \
            --newversion "$version_daily" \
            --force-distribution \
            --distribution "unstable" \
            "Daily build."
    popd >/dev/null || exit 1
}

debian_changelog_revert() {
    local pkgdir=$1
    echo "> Restoring previous changelog"
    mv "$pkgdir/debian/changelog.old" "$pkgdir/debian/changelog"
}

debian_source() {
    local pkgdir=$1
    pushd "$pkgdir" >/dev/null || exit 1
        dpkg-parsechangelog -S Source
    popd >/dev/null || exit 1
}

debian_version() {
    local pkgdir=$1
    pushd "$pkgdir" >/dev/null || exit 1
        dpkg-parsechangelog -S VERSION
    popd >/dev/null || exit 1
}

debian_determinate_archs() {
    local pkgdir=$1
    local repoconf_dir=$2
    local archs=$3

    if [[ -n "$archs" ]]; then
        archs="$(echo "$archs" | tr ',' ' ')"
    elif grep -q '^Architecture: all$' "$pkgdir/debian/control"; then
        archs="all"
    else
        archs="$(debian_repo_archs "$repoconf_dir")"
    fi
    echo "$archs"
}

debian_repo_archs() {
    local repoconf_dir=$1

    grep "Architectures" "$repoconf_dir/distributions" \
        | head -n 1 | awk -F: '{print $2}' | sed 's/source//g'
}
